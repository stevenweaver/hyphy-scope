import"../chunks/CWj6FrbW.js";import"../chunks/DwqWfmFf.js";import{o as ma}from"../chunks/Cwh0FcVT.js";import{p as _a,f as _,t as J,c as i,s as t,i as l,a as p,m as xa,$ as ha,q as m,o as e,n as L,r as n,v as La,w as ga,x as ya}from"../chunks/BAjxKRmT.js";import{h as ba,e as g,s as Fa}from"../chunks/BzaWH1un.js";import{b as Ea,i as y}from"../chunks/CNWIBFBx.js";import{h as Da}from"../chunks/mVHckqdF.js";import{a as Sa,b as wa,l as Z,c as Ua,g as O,r as Ra}from"../chunks/DJlT08gO.js";import{i as Ma}from"../chunks/HQjPdDHY.js";import"../chunks/DMkSVGaj.js";import{F as za}from"../chunks/C6YOfcOL.js";var Ia=_('<meta name="description" content="Interactive FEL (Fixed Effects Likelihood) analysis visualization"/>'),Pa=_('<div class="status loading svelte-xnod31"><p>Loading data...</p></div>'),Aa=_('<div class="status error svelte-xnod31"><p> </p> <button class="svelte-xnod31">Dismiss</button></div>'),Na=_('<div class="visualization-section svelte-xnod31"><h2>Analysis Results</h2> <!></div>'),ja=_('<div class="no-data svelte-xnod31"><p>Please load FEL analysis data to begin visualization.</p></div>'),ka=_('<div class="fel-demo svelte-xnod31"><div class="header svelte-xnod31"><h1 class="svelte-xnod31">FEL Analysis Visualization</h1> <p class="svelte-xnod31">Interactive visualization for Fixed Effects Likelihood (FEL) analysis results from HyPhy.</p></div> <div class="data-loading svelte-xnod31"><h2>Load Data</h2> <div class="loading-options svelte-xnod31"><div class="option svelte-xnod31"><h3 class="svelte-xnod31">Upload File</h3> <input type="file" accept=".json" class="svelte-xnod31"/> <p class="help svelte-xnod31">Select a HyPhy FEL results JSON file</p></div> <div class="option svelte-xnod31"><h3 class="svelte-xnod31">Load from URL</h3> <div class="url-input svelte-xnod31"><input type="url" placeholder="https://example.com/results.json" class="svelte-xnod31"/> <button class="svelte-xnod31">Load</button></div> <p class="help svelte-xnod31">Enter a URL to a publicly accessible JSON file</p></div> <div class="option svelte-xnod31"><h3 class="svelte-xnod31">Test Data</h3> <div class="test-data-controls svelte-xnod31"><select class="svelte-xnod31"><option>FEL</option><option>MEME</option><option>SLAC</option><option>BUSTED</option><option>aBSREL</option><option>RELAX</option><option>BGM</option><option>FADE</option><option>GARD</option></select> <button class="svelte-xnod31">Load Test Data</button></div> <p class="help svelte-xnod31">Select from available test datasets</p></div></div> <!> <!></div> <!> <div class="usage-info svelte-xnod31"><h2 class="svelte-xnod31">Usage</h2> <h3 class="svelte-xnod31">As a Component</h3> <pre class="svelte-xnod31"><code class="svelte-xnod31"><!></code></pre> <h3 class="svelte-xnod31">URL Parameters</h3> <ul class="svelte-xnod31"><li class="svelte-xnod31"><code class="svelte-xnod31">?json=URL</code> - Load data from external URL</li> <li class="svelte-xnod31"><code class="svelte-xnod31">?id=ID</code> - Load data from localStorage</li> <li class="svelte-xnod31"><code class="svelte-xnod31">?data=JSON</code> - Parse JSON data directly</li></ul> <h3 class="svelte-xnod31">Features</h3> <ul class="svelte-xnod31"><li class="svelte-xnod31">Interactive plots with multiple visualization types</li> <li class="svelte-xnod31">Filterable results table</li> <li class="svelte-xnod31">Configurable p-value thresholds</li> <li class="svelte-xnod31">Site classification by selection pressure</li> <li class="svelte-xnod31">Summary statistics</li></ul></div></div>');function Ka(aa,ea){_a(ea,!1);let r=m(null),u=m(!1),o=m(null),T=m(),x=m("fel"),b,c=m(""),F="";ma(()=>(b=new URLSearchParams(window.location.search),e(c,b.get("json")||""),F=b.get("id")||"",ta(),window.addEventListener("message",V,!1),()=>{window.removeEventListener("message",V,!1)}));async function ta(){e(u,!0),e(o,null);try{l(c)?(e(r,await Z(l(c))),l(r)||e(o,"Failed to load data from URL")):F?(e(r,Ua(F)),l(r)||e(o,"No data found in storage for the provided ID")):e(r,await sa())}catch(a){e(o,a instanceof Error?a.message:"Failed to load data")}finally{e(u,!1)}}async function sa(){return await O(l(x))||await O("fel")}async function la(){try{const a=await O(l(x));a?(e(r,a),e(o,null)):e(o,"Selected test data not found")}catch{e(o,"Failed to load test data")}}function V(a){var s,d;a.data&&typeof a.data=="object"&&((s=a.data.data)!=null&&s.MLE?e(r,a.data.data):a.data.type==="data-response"&&((d=a.data.data)!=null&&d.MLE)&&e(r,a.data.data))}async function oa(a){var d;const s=(d=a.target.files)==null?void 0:d[0];if(s){e(u,!0),e(o,null);try{const f=await s.text(),v=JSON.parse(f);v!=null&&v.MLE?e(r,v):e(o,"Invalid FEL results file. Must contain MLE data.")}catch{e(o,"Failed to parse JSON file")}finally{e(u,!1)}}}function ia(){l(c).trim()&&Z(l(c).trim()).then(a=>{a?(e(r,a),e(o,null)):e(o,"Failed to load data from URL")})}Ma();var E=ka();ba(a=>{var s=Ia();ha.title="FEL Visualization - HyPhy Scope",p(a,s)});var D=t(i(E),2),S=t(i(D),2),w=i(S),B=t(i(w),2);Ea(B,a=>e(T,a),()=>l(T)),L(2),n(w);var U=t(w,2),C=t(i(U),2),R=i(C);Ra(R);var H=t(R,2);n(C),L(2),n(U);var G=t(U,2),q=t(i(G),2),h=i(q);J(()=>{l(x),La(()=>{})});var M=i(h);M.value=M.__value="fel";var z=t(M);z.value=z.__value="meme";var I=t(z);I.value=I.__value="slac";var P=t(I);P.value=P.__value="busted";var A=t(P);A.value=A.__value="absrel";var N=t(A);N.value=N.__value="relax";var j=t(N);j.value=j.__value="bgm";var k=t(j);k.value=k.__value="fade";var X=t(k);X.value=X.__value="gard",n(h);var na=t(h,2);n(q),L(2),n(G),n(S);var $=t(S,2);{var da=a=>{var s=Pa();p(a,s)};y($,a=>{l(u)&&a(da)})}var ra=t($,2);{var va=a=>{var s=Aa(),d=i(s),f=i(d);n(d);var v=t(d,2);n(s),J(()=>Fa(f,`Error: ${l(o)??""}`)),g("click",v,()=>e(o,null)),p(a,s)};y(ra,a=>{l(o)&&a(va)})}n(D);var K=t(D,2);{var ca=a=>{var s=Na(),d=t(i(s),2);za(d,{get data(){return l(r)}}),n(s),p(a,s)},pa=a=>{var s=ga(),d=ya(s);{var f=v=>{var fa=ja();p(v,fa)};y(d,v=>{!l(u)&&!l(o)&&v(f)},!0)}p(a,s)};y(K,a=>{l(r)?a(ca):a(pa,!1)})}var Q=t(K,2),W=t(i(Q),4),Y=i(W),ua=i(Y);Da(ua,()=>`&lt;script&gt;
  import { FelVisualization } from 'hyphy-scope';
  
  let data = null;
  
  // Load your data
  onMount(async () => {
    data = await loadDataFromUrl(params.json) ||
           loadDataFromStorage(params.id) ||
           defaultData;
  });
&lt;/script&gt;

&lt;FelVisualization {data} /&gt;`),n(Y),n(W),L(8),n(Q),n(E),J(a=>H.disabled=a,[()=>!l(c).trim()]),g("change",B,oa),Sa(R,()=>l(c),a=>e(c,a)),g("click",H,ia),wa(h,()=>l(x),a=>e(x,a)),g("click",na,la),p(aa,E),xa()}export{Ka as component};

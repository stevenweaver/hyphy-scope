import"../chunks/CWj6FrbW.js";import"../chunks/O9NtFhcF.js";import{o as Y}from"../chunks/Bm-Peyi0.js";import{p as Z,f as h,t as y,i as a,a as p,m as ee,$ as ae,c as d,s as r,o as s,q as g,v as se,r as i,n as S,w as te,x as le}from"../chunks/BrBLfwSL.js";import{h as ie,e as E,s as x}from"../chunks/DZG3np5x.js";import{i as R}from"../chunks/kkMc64k_.js";import{e as oe,b as de,a as re,g as ne,i as ce,r as ve,l as pe,c as ue}from"../chunks/CdTtAD6V.js";import{i as he}from"../chunks/i3jxjd7U.js";import"../chunks/CdoYSR-b.js";import{A as fe}from"../chunks/C0VZXULA.js";var me=h('<meta name="description" content="Interactive visualization of aBSREL (Adaptive Branch-Site Random Effects Likelihood) analysis results"/>'),ge=h("<option> </option>"),be=h('<div class="status loading svelte-1768dd3"><p>Loading data...</p></div>'),_e=h('<div class="status error svelte-1768dd3"><p> </p> <button class="svelte-1768dd3">Dismiss</button></div>'),Le=h('<div class="visualization-section svelte-1768dd3"><!></div>'),ye=h('<div class="no-data svelte-1768dd3"><h3>No Data Loaded</h3> <p>Please load aBSREL analysis data using one of the options above to see the visualization.</p></div>'),Se=h(`<div class="absrel-demo svelte-1768dd3"><div class="header svelte-1768dd3"><h1 class="svelte-1768dd3">aBSREL Analysis</h1> <p class="svelte-1768dd3">Interactive visualization of Adaptive Branch-Site Random Effects Likelihood analysis.
      aBSREL tests for episodic positive selection on branches without requiring 
      a priori specification of lineages.</p></div> <div class="data-loading svelte-1768dd3"><h2>Load Data</h2> <div class="loading-options svelte-1768dd3"><div class="option svelte-1768dd3"><h3 class="svelte-1768dd3">Test Data</h3> <div class="test-data-controls svelte-1768dd3"><select class="svelte-1768dd3"></select> <button class="svelte-1768dd3"> </button></div> <p class="help svelte-1768dd3">Load example data to explore the visualization features.</p></div> <div class="option svelte-1768dd3"><h3 class="svelte-1768dd3">Load from URL</h3> <div class="url-input svelte-1768dd3"><input type="url" placeholder="Enter JSON file URL..." class="svelte-1768dd3"/> <button class="svelte-1768dd3">Load</button></div> <p class="help svelte-1768dd3">Load aBSREL results from a remote JSON file.</p></div> <div class="option svelte-1768dd3"><h3 class="svelte-1768dd3">Upload File</h3> <input type="file" accept=".json,.gz" class="svelte-1768dd3"/> <p class="help svelte-1768dd3">Upload a local aBSREL JSON file from your computer.</p></div></div> <!> <!></div> <!> <div class="usage-info svelte-1768dd3"><h2 class="svelte-1768dd3">About aBSREL</h2> <h3 class="svelte-1768dd3">What is aBSREL?</h3> <p>The <strong>Adaptive Branch-Site Random Effects Likelihood (aBSREL)</strong> method 
      tests whether a gene has experienced positive selection along individual branches 
      without requiring a priori specification of lineages. It uses an adaptive approach 
      to determine the optimal number of rate classes for each branch.</p> <h3 class="svelte-1768dd3">Key Features</h3> <ul class="svelte-1768dd3"><li class="svelte-1768dd3"><strong>Branch-specific testing:</strong> Tests each branch individually for positive selection</li> <li class="svelte-1768dd3"><strong>Adaptive rate classes:</strong> Automatically determines optimal number of rate classes</li> <li class="svelte-1768dd3"><strong>No a priori specification:</strong> Does not require prior knowledge of which branches to test</li> <li class="svelte-1768dd3"><strong>Multiple testing correction:</strong> Applies Holm-Bonferroni correction for multiple comparisons</li> <li class="svelte-1768dd3"><strong>Bayes Factor support:</strong> Provides evidence ratios for selection</li></ul> <h3 class="svelte-1768dd3">Interpretation</h3> <ul class="svelte-1768dd3"><li class="svelte-1768dd3"><strong>p-value &lt; 0.05:</strong> Evidence of positive selection on the branch</li> <li class="svelte-1768dd3"><strong>Ï‰ &gt; 1:</strong> Rate classes with positive selection (dN/dS &gt; 1)</li> <li class="svelte-1768dd3"><strong>Bayes Factor &gt; 100:</strong> Very strong evidence for selection</li> <li class="svelte-1768dd3"><strong>Rate classes:</strong> Number of selective regimes fitted to the branch</li></ul> <h3 class="svelte-1768dd3">Using This Component</h3> <pre class="svelte-1768dd3"><code class="svelte-1768dd3">import &#123; AbsrelVisualization &#125; from 'hyphy-scope';

&lt;AbsrelVisualization data=&#123;absrelResults&#125; /&gt;</code></pre> <h3 class="svelte-1768dd3">Data Format</h3> <p>The component expects aBSREL analysis results in JSON format with the following structure:</p> <ul class="svelte-1768dd3"><li class="svelte-1768dd3"><code class="svelte-1768dd3">test results</code> - Statistical test results for each branch</li> <li class="svelte-1768dd3"><code class="svelte-1768dd3">Site Log Likelihood</code> - Site-level likelihood data</li> <li class="svelte-1768dd3"><code class="svelte-1768dd3">branch attributes</code> - Branch-specific rate distributions</li> <li class="svelte-1768dd3"><code class="svelte-1768dd3">fits</code> - Model comparison statistics</li></ul></div></div>`);function ke(I,J){Z(J,!1);let c=g(null),o=g(!1),n=g(""),f=g(""),m=g("absrel");const O=[{value:"fel",label:"FEL"},{value:"meme",label:"MEME"},{value:"absrel",label:"aBSREL"},{value:"busted",label:"BUSTED"},{value:"relax",label:"RELAX"}];Y(async()=>{await U()});async function U(){try{s(o,!0),s(n,""),s(c,await ne(a(m)))}catch(e){s(n,`Failed to load ${a(m).toUpperCase()} test data: ${e.message}`),s(c,null)}finally{s(o,!1)}}async function P(){if(!a(f).trim()){s(n,"Please enter a valid URL");return}try{s(o,!0),s(n,""),s(c,await pe(a(f)))}catch(e){s(n,`Failed to load data from URL: ${e.message}`),s(c,null)}finally{s(o,!1)}}async function V(e){var l;const t=(l=e.target.files)==null?void 0:l[0];if(t)try{s(o,!0),s(n,""),s(c,await ue(t))}catch(u){s(n,`Failed to load file: ${u.message}`),s(c,null)}finally{s(o,!1)}}function $(){s(n,"")}he();var B=Se();ie(e=>{var t=me();ae.title="aBSREL Analysis - HyPhy Scope",p(e,t)});var D=r(d(B),2),A=r(d(D),2),F=d(A),T=r(d(F),2),b=d(T);y(()=>{a(m),se(()=>{})}),oe(b,5,()=>O,ce,(e,t)=>{var l=ge(),u=d(l,!0);i(l);var v={};y(()=>{x(u,a(t).label),v!==(v=a(t).value)&&(l.value=(l.__value=a(t).value)??"")}),p(e,l)}),i(b);var _=r(b,2),C=d(_,!0);i(_),i(T),S(2),i(F);var w=r(F,2),k=r(d(w),2),L=d(k);ve(L);var z=r(L,2);i(k),S(2),i(w);var N=r(w,2),M=r(d(N),2);S(2),i(N),i(A);var q=r(A,2);{var H=e=>{var t=be();p(e,t)};R(q,e=>{a(o)&&e(H)})}var j=r(q,2);{var K=e=>{var t=_e(),l=d(t),u=d(l,!0);i(l);var v=r(l,2);i(t),y(()=>x(u,a(n))),E("click",v,$),p(e,t)};R(j,e=>{a(n)&&e(K)})}i(D);var W=r(D,2);{var X=e=>{var t=Le(),l=d(t);fe(l,{get data(){return a(c)}}),i(t),p(e,t)},G=e=>{var t=te(),l=le(t);{var u=v=>{var Q=ye();p(v,Q)};R(l,v=>{a(o)||v(u)},!0)}p(e,t)};R(W,e=>{a(c)?e(X):e(G,!1)})}S(2),i(B),y(e=>{_.disabled=a(o),x(C,a(o)?"Loading...":"Load Test Data"),L.disabled=a(o),z.disabled=e,M.disabled=a(o)},[()=>a(o)||!a(f).trim()]),de(b,()=>a(m),e=>s(m,e)),E("click",_,U),re(L,()=>a(f),e=>s(f,e)),E("click",z,P),E("change",M,V),p(I,B),ee()}export{ke as component};
